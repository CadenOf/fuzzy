apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
  generation: 4
  labels:
    app: kube-state-metrics
  name: kube-state-metrics
  namespace: kube-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kube-state-metrics
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kube-state-metrics
    spec:
      containers:
      - args:
        - --kubeconfig
        - /etc/kube-state-metrics/kubeconfig
        - --apiserver
        - https://192.168.66.196:443
        - --collectors
        - namespaces,nodes,pods
        image: 192.168.66.200/k8s-mirror/kube-state-metrics:1.9.3
        imagePullPolicy: IfNotPresent
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          hostPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          hostPort: 8081
          name: telemetry
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 800m
            memory: 1000Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/kube-state-metrics/
          name: config
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: harbor-matrix
      hostNetwork: true
      nodeSelector:
        paas.graviti.cn/prometheus: "true"
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kube-state-metrics
      serviceAccountName: kube-state-metrics
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: paas.graviti.cn/service
        value: prometheus
      - key: node.kubernetes.io/master
        value: "false"
      volumes:
      - configMap:
          defaultMode: 420
          name: kube-state-metrics
        name: config
