apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus
    paas.graviti.cn/service: prometheus
  name: prometheus
  namespace: kube-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.retention=8d
        image: "192.168.66.200/k8s-mirror/prometheus:2.15.2"
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          hostPort: 9090
          protocol: TCP
        resources:
          limits:
            memory: 4Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /prometheus/data
          name: data
        - mountPath: /etc/prometheus
          name: config
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: harbor-matrix
      hostNetwork: true
      initContainers:
      - command:
        - chown
        - -R
        - 65534:65534
        - /prometheus/data
        - /etc/prometheus
        image: "192.168.66.200/k8s-mirror/busybox:1.31.1"
        imagePullPolicy: IfNotPresent
        name: init-chown-data
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /prometheus/data
          name: data
        - mountPath: /etc/prometheus
          name: config
      nodeSelector:
        paas.graviti.cn/prometheus: "true"
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: prometheus
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 15
      tolerations:
      - key: paas.graviti.cn/service
        value: prometheus
      - key: node.kubernetes.io/master
        value: "false"
      volumes:
      - hostPath:
          path: /var/lib/prometheus
          type: DirectoryOrCreate
        name: data
      - hostPath:
          path: /etc/prometheus
          type: DirectoryOrCreate
        name: config
